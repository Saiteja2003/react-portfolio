/* src/components/Home.module.css (Simplified Version) */

.homeContainer {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
}

.heroWrapper {
  position: relative;
  width: 100%;
  max-width: 800px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.typewriterWrapper {
  /* This ensures the height doesn't collapse when switching text */
  min-height: 1.1em; /* Adjust based on your h1 line-height */
}
.tiltWrapper {
  position: relative;
  width: 100%;
  padding: 2rem;
  background: var(--glass-bg);
  backdrop-filter: blur(12px);
  -webkit-backdrop-filter: blur(12px);
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
  transform-style: preserve-3d;
}

/* --- Styles for the decorative floating shapes --- */
.floatingShape {
  position: absolute;
  border-radius: 20%;
  background: var(--accent-gradient);
  opacity: 0.08;
  filter: blur(25px);
  transform: translateZ(-50px); /* Pushes shapes behind the text */
}

.shape1 {
  width: 250px;
  height: 250px;
  top: 10%;
  left: 5%;
}

.shape2 {
  width: 150px;
  height: 150px;
  top: 60%;
  right: 15%;
}

.shape3 {
  width: 200px;
  height: 200px;
  top: 30%;
  right: 30%;
}
/* --- End of shape styles --- */

.contentWrapper {
  position: relative;
  z-index: 2;
  text-align: center;
  transform: translateZ(50px); /* Lifts the text towards the viewer */
  pointer-events: none;
}

.typewriter {
  color: #fff;
  text-shadow: 0 2px 10px rgba(0, 0, 0, 0.5);
}

/* When the parent is hovered, HIDE the typewriter */
.isHovered .typewriter {
  display: none;
}

/* When the parent is hovered, SHOW the hover message */
.isHovered .hoverMessage {
  display: inline; /* Or 'block' if you prefer */
}

.subtitle {
  color: #fff;
  text-shadow: 0 2px 10px rgba(0, 0, 0, 0.5);
}

.hoverMessage {
  display: none; /* Hidden by default */
  color: #fff;
  text-shadow: 0 2px 10px rgba(0, 0, 0, 0.5);
}

.scrollButton {
  position: absolute;
  bottom: 2rem;
  width: 24px;
  height: 40px;
  border: 2px solid var(--primary-color);
  border-radius: 20px;
}

.scrollButton span {
  position: absolute;
  top: 8px;
  left: 50%;
  transform: translateX(-50%);
  width: 4px;
  height: 8px;
  background-color: var(--primary-color);
  border-radius: 2px;
  animation: scroll-bounce 1.5s ease-out infinite;
}

@keyframes scroll-bounce {
  0% {
    transform: translate(-50%, 0);
    opacity: 1;
  }
  100% {
    transform: translate(-50%, 12px);
    opacity: 0;
  }
}
